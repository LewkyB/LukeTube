version: '3.9'

# to install the docker plugin for loki logging
# $ docker plugin install grafana/loki-docker-driver:latest --alias loki --grant-all-permissions

services:
  LukeTubeBackend:
    image: ${DOCKER_REGISTRY-}luketube
    build:
      context: .
      dockerfile: LukeTubeBackend.Dockerfile
    depends_on:
      - db
      - redis
      - otel_collector
    restart: no
    expose:
      - "82"
    env_file:
      - ./.env
    ports:
      - 82:82
    networks:
      - otlp
    logging:
      driver: loki
      options:
        loki-url: 'http://localhost:3100/loki/api/v1/push'
        mode: non-blocking
        max-buffer-size: 4m
        loki-retries: "3"

  angular:
    restart: no
    build:
      context: ./LukeTube/client
      dockerfile: Dockerfile
    depends_on:
      - LukeTubeBackend
    ports:
      - 81:80
    networks:
      - otlp
    logging:
      driver: loki
      options:
        loki-url: 'http://localhost:3100/loki/api/v1/push'
        mode: non-blocking
        max-buffer-size: 4m
        loki-retries: "3"

  LukeTubeWorker:
    image: ${DOCKER_REGISTRY-}luketube-worker
    build:
      context: .
      dockerfile: LukeTubeWorker.Dockerfile
    restart: no
    depends_on:
      - db
      - otel_collector
    networks:
      - otlp
    env_file:
      - ./.env
    logging:
      driver: loki
      options:
        loki-url: 'http://localhost:3100/loki/api/v1/push'
        mode: non-blocking
        max-buffer-size: 4m
        loki-retries: "3"

  db:
    image: postgres:14.1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    restart: always
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    networks:
      - otlp
    ports:
      - 5432:5432
    logging:
      driver: loki
      options:
        loki-url: 'http://localhost:3100/loki/api/v1/push'
        mode: non-blocking
        max-buffer-size: 4m
        loki-retries: "3"

  redis:
    image: redis:6.2.6
    restart: always
    networks:
      - otlp
    logging:
      driver: loki
      options:
        loki-url: 'http://localhost:3100/loki/api/v1/push'
        mode: non-blocking
        max-buffer-size: 4m
        loki-retries: "3"

  jaeger:
    image: jaegertracing/all-in-one:latest
    volumes:
      - "./jaeger-ui.json:/etc/jaeger/jaeger-ui.json"
    command: --query.ui-config /etc/jaeger/jaeger-ui.json
    environment:
      - METRICS_STORAGE_TYPE=prometheus
      - PROMETHEUS_SERVER_URL=http://prometheus:9090
    ports:
      - "14250"
      - "14268:14268"
      - "6831:6831/udp"
      - "16686:16686"
      - "16685:16685"
    networks:
      - otlp
    logging:
      driver: loki
      options:
        loki-url: 'http://localhost:3100/loki/api/v1/push'
        mode: non-blocking
        max-buffer-size: 4m
        loki-retries: "3"

  otel_collector:
    image: otel/opentelemetry-collector-contrib:latest
    volumes:
      - "./otel-collector-config.yml:/etc/otelcol/otel-collector-config.yml"
    command: --config /etc/otelcol/otel-collector-config.yml
    ports:
      - "1888:1888" # pprof extention
      - "8888:8888" # prometheus metrics exposed by collector
      - "8889:8889" # prometheus exporter metrics
      - "13133:13133" # health check extensioh
      - "4317:4317" # otlp grpc receiver
      - "4318:4318" # otlp http receiver
      - "55679:55679" # zpages extension
    depends_on:
      - jaeger
      - prometheus
      - loki
    networks:
      - otlp
    logging:
      driver: loki
      options:
        loki-url: 'http://localhost:3100/loki/api/v1/push'
        mode: non-blocking
        max-buffer-size: 4m
        loki-retries: "3"

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - "./prometheus.yml:/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"
    networks:
      - otlp
    logging:
      driver: loki
      options:
        loki-url: 'http://localhost:3100/loki/api/v1/push'
        mode: non-blocking
        max-buffer-size: 4m
        loki-retries: "3"

  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - 3100:3100
    volumes:
      - ./loki-config.yaml:/etc/loki/loki-config.yaml
    command: -config.file=/etc/loki/loki-config.yaml
    networks:
      - otlp
    logging:
      driver: loki
      options:
        loki-url: 'http://localhost:3100/loki/api/v1/push'
        mode: non-blocking
        max-buffer-size: 4m
        loki-retries: "3"

  grafana:
    image: grafana/grafana:latest
    volumes:
      - ./grafana.ini:/etc/grafana/grafana.ini
      - ./datasource.yml:/etc/grafana/provisioning/datasources/datasource.yaml
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    ports:
      - 3000:3000
    networks:
      - otlp
    logging:
      driver: loki
      options:
        loki-url: 'http://localhost:3100/loki/api/v1/push'
        mode: non-blocking
        max-buffer-size: 4m
        loki-retries: "3"

networks:
  otlp: